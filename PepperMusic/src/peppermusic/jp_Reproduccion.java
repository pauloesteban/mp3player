/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package peppermusic;

import com.sun.awt.AWTUtilities;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Shape;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseEvent;
import java.awt.geom.RoundRectangle2D;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Iterator;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.SourceDataLine;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.ToolTipManager;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javazoom.jlgui.basicplayer.BasicPlayerException;
//import javazoom.jlgui.basicplayer.BasicPlayerException;

/**
 *
 * @author orlando
 */
public class jp_Reproduccion extends jp_Canciones {
    
    /**
     * Creates new form jp_Reproduccion
     */
   
   
    int repetir=0;
    //jp_Canciones can
    PepperMusic_Frame peppermusic;
    //ZPlayer mizplayer;   
    File file; 
     
    public jp_Reproduccion(PepperMusic_Frame venta) {
        super(venta);
        initComponents();
        ventana.NoRepro=false;
        peppermusic = venta;    
        super.setEnabled_Reproduccion(true);
        super.setSelected_Lista(false);
        super.setSelected_Reproduccion(true);
        START.setSelected(true);
        /*
        if(canc.venta.EnRepro==false){
        canc.venta.Barra = new Clase_Progreso(jp_Progreso,this);
        canc.venta.Barra.start();
        }*/
        js_volumen.setVisible(false);
        js_volumen.validate();
        jb_repetir.setToolTipText("REPETICIÓN DESACTIVADA");
        
        if (ventana.skin == 0){
            
              fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/Fondo_Celeste.png")));
             
         }
          if (ventana.skin == 1){
             
               fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/clasica2.png")));
          }
           if (ventana.skin == 2){
              
                fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/rock2.png")));
           }
            if (ventana.skin == 3){
                
                fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/urbano2.png")));
            }
       
        /*
        try {
            Reproductor mi_reproductor = new Reproductor();
            mi_reproductor.AbrirFichero(getClass().getResource("/Recursos/BohemianRhapsody.mp3").getFile());
            mi_reproductor.Play();
          } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
          }
       */
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jb_Ecualizador = new javax.swing.JButton();
        jtb_agrandar = new javax.swing.JToggleButton();
        karaoke = new javax.swing.JToggleButton();
        jb_avanzar = new javax.swing.JButton();
        jb_retroceder = new javax.swing.JButton();
        START = new peppermusic.CustomButton();
        pn = new peppermusic.LetraAnimada.PanelAnimado();
        jb_reiniciar = new javax.swing.JButton();
        jb_mute = new peppermusic.CustomButton();
        js_volumen = new javax.swing.JSlider();
        jtb_aleatorio = new peppermusic.CustomButton();
        jb_repetir = new javax.swing.JButton();
        jp_Progreso = new peppermusic.CustomPanel();
        jp_Letras = new javax.swing.JPanel();
        js_Letras = new javax.swing.JScrollPane();
        jtxt_letra = new javax.swing.JTextPane();
        jb_add_letras = new javax.swing.JButton();
        jlb_tiempo = new javax.swing.JLabel();
        fondo1 = new javax.swing.JLabel();

        setOpaque(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        setLayout(null);

        jb_Ecualizador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ecupeq.png"))); // NOI18N
        jb_Ecualizador.setBorderPainted(false);
        jb_Ecualizador.setContentAreaFilled(false);
        jb_Ecualizador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_EcualizadorActionPerformed(evt);
            }
        });
        add(jb_Ecualizador);
        jb_Ecualizador.setBounds(20, 290, 40, 40);

        jtb_agrandar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton_pequeño.png"))); // NOI18N
        jtb_agrandar.setBorder(null);
        jtb_agrandar.setBorderPainted(false);
        jtb_agrandar.setContentAreaFilled(false);
        jtb_agrandar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton_agrandar.png"))); // NOI18N
        jtb_agrandar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtb_agrandarActionPerformed(evt);
            }
        });
        add(jtb_agrandar);
        jtb_agrandar.setBounds(270, 60, 25, 25);

        karaoke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/barramusical.png"))); // NOI18N
        karaoke.setBorder(null);
        karaoke.setBorderPainted(false);
        karaoke.setContentAreaFilled(false);
        karaoke.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/karaoke.png"))); // NOI18N
        karaoke.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                karaokeStateChanged(evt);
            }
        });
        karaoke.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                karaokeMouseClicked(evt);
            }
        });
        karaoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                karaokeActionPerformed(evt);
            }
        });
        add(karaoke);
        karaoke.setBounds(230, 295, 35, 35);

        jb_avanzar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_avanzar.png"))); // NOI18N
        jb_avanzar.setBorderPainted(false);
        jb_avanzar.setContentAreaFilled(false);
        jb_avanzar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_avanzar2.png"))); // NOI18N
        jb_avanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_avanzarActionPerformed(evt);
            }
        });
        add(jb_avanzar);
        jb_avanzar.setBounds(220, 108, 30, 30);

        jb_retroceder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_retroceder.png"))); // NOI18N
        jb_retroceder.setBorderPainted(false);
        jb_retroceder.setContentAreaFilled(false);
        jb_retroceder.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_retroceder2.png"))); // NOI18N
        jb_retroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_retrocederActionPerformed(evt);
            }
        });
        add(jb_retroceder);
        jb_retroceder.setBounds(150, 108, 30, 30);

        START.setBorder(null);
        START.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_start.png"))); // NOI18N
        START.setBorderPainted(false);
        START.setContentAreaFilled(false);
        START.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_star2.png"))); // NOI18N
        START.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_stop2.png"))); // NOI18N
        START.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_stop.png"))); // NOI18N
        START.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STARTActionPerformed(evt);
            }
        });
        add(START);
        START.setBounds(172, 47, 56, 56);
        add(pn);
        pn.setBounds(30, 40, 120, 68);

        jb_reiniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_fin.png"))); // NOI18N
        jb_reiniciar.setBorder(null);
        jb_reiniciar.setBorderPainted(false);
        jb_reiniciar.setContentAreaFilled(false);
        jb_reiniciar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_fin2.png"))); // NOI18N
        jb_reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_reiniciarActionPerformed(evt);
            }
        });
        add(jb_reiniciar);
        jb_reiniciar.setBounds(182, 116, 36, 36);

        jb_mute.setBorder(null);
        jb_mute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_volumen.png"))); // NOI18N
        jb_mute.setBorderPainted(false);
        jb_mute.setContentAreaFilled(false);
        jb_mute.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_volumen_sin.png"))); // NOI18N
        jb_mute.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jb_muteMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jb_muteMouseMoved(evt);
            }
        });
        jb_mute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jb_muteMouseExited(evt);
            }
        });
        jb_mute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_muteActionPerformed(evt);
            }
        });
        add(jb_mute);
        jb_mute.setBounds(250, 125, 25, 25);

        js_volumen.setOrientation(javax.swing.JSlider.VERTICAL);
        js_volumen.setPaintLabels(true);
        js_volumen.setToolTipText("");
        js_volumen.setValue(80);
        js_volumen.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        js_volumen.setOpaque(false);
        js_volumen.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                js_volumenComponentAdded(evt);
            }
        });
        js_volumen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                js_volumenStateChanged(evt);
            }
        });
        js_volumen.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                js_volumenMouseMoved(evt);
            }
        });
        js_volumen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                js_volumenMouseExited(evt);
            }
        });
        add(js_volumen);
        js_volumen.setBounds(245, 41, 35, 90);

        jtb_aleatorio.setBorder(null);
        jtb_aleatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_aleatorio_off.png"))); // NOI18N
        jtb_aleatorio.setBorderPainted(false);
        jtb_aleatorio.setContentAreaFilled(false);
        jtb_aleatorio.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_aleatorio_on.png"))); // NOI18N
        jtb_aleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtb_aleatorioActionPerformed(evt);
            }
        });
        add(jtb_aleatorio);
        jtb_aleatorio.setBounds(30, 112, 20, 20);

        jb_repetir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/repro_rep_off.png"))); // NOI18N
        jb_repetir.setBorder(null);
        jb_repetir.setBorderPainted(false);
        jb_repetir.setContentAreaFilled(false);
        jb_repetir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_repetirActionPerformed(evt);
            }
        });
        add(jb_repetir);
        jb_repetir.setBounds(130, 112, 20, 20);

        jp_Progreso.setToolTipText("hola");
        jp_Progreso.setOpaque(false);
        jp_Progreso.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jp_ProgresoMouseMoved(evt);
            }
        });
        jp_Progreso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_ProgresoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jp_ProgresoMouseExited(evt);
            }
        });
        jp_Progreso.setLayout(null);
        add(jp_Progreso);
        jp_Progreso.setBounds(160, 34, 80, 80);

        jp_Letras.setOpaque(false);
        jp_Letras.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jp_LetrasComponentShown(evt);
            }
        });
        jp_Letras.setLayout(null);

        js_Letras.setBackground(new java.awt.Color(153, 255, 255));
        js_Letras.setBorder(null);
        js_Letras.setViewportBorder(javax.swing.BorderFactory.createCompoundBorder());
        js_Letras.setAlignmentX(0.0F);
        js_Letras.setAlignmentY(0.0F);
        js_Letras.setAutoscrolls(true);
        js_Letras.setHorizontalScrollBar(null);
        js_Letras.setMaximumSize(new java.awt.Dimension(230, 140));
        js_Letras.setMinimumSize(new java.awt.Dimension(230, 140));
        js_Letras.setOpaque(false);
        js_Letras.setPreferredSize(new java.awt.Dimension(230, 140));
        js_Letras.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                js_LetrasComponentShown(evt);
            }
        });

        jtxt_letra.setEditable(false);
        jtxt_letra.setBackground(new java.awt.Color(153, 255, 255));
        jtxt_letra.setOpaque(false);
        jtxt_letra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxt_letraMouseClicked(evt);
            }
        });
        jtxt_letra.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jtxt_letraComponentShown(evt);
            }
        });
        js_Letras.setViewportView(jtxt_letra);

        jp_Letras.add(js_Letras);
        js_Letras.setBounds(0, 0, 248, 138);

        add(jp_Letras);
        jp_Letras.setBounds(25, 155, 248, 138);

        jb_add_letras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton_agregar_letras.png"))); // NOI18N
        jb_add_letras.setText("jButton3");
        jb_add_letras.setBorderPainted(false);
        jb_add_letras.setContentAreaFilled(false);
        jb_add_letras.setFocusPainted(false);
        jb_add_letras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_add_letras.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/boton_agregar_letras2.png"))); // NOI18N
        jb_add_letras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_add_letrasActionPerformed(evt);
            }
        });
        add(jb_add_letras);
        jb_add_letras.setBounds(190, 300, 30, 30);

        jlb_tiempo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlb_tiempo.setText("00:27 - 04:58");
        add(jlb_tiempo);
        jlb_tiempo.setBounds(30, 110, 120, 20);

        fondo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Fondo_Celeste1.png"))); // NOI18N
        add(fondo1);
        fondo1.setBounds(0, 0, 300, 336);
    }// </editor-fold>//GEN-END:initComponents

    private void karaokeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_karaokeStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_karaokeStateChanged

    private void karaokeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_karaokeMouseClicked

    }//GEN-LAST:event_karaokeMouseClicked

    private void karaokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_karaokeActionPerformed
        if(!karaoke.isSelected()){
            js_Letras.setLocation(0, 0);
           
            jp_Letras.removeAll();
            
            jp_Letras.add(js_Letras);
            jp_Letras.revalidate();
            jp_Letras.repaint();
           
            /*
           jlb_barras.setIcon(new ImageIcon( getClass().getResource("/Recursos/imagen_letras.png")));
            jlb_barras.repaint();
            jlb_barras.revalidate();
*/
        }else{
            
           /*JLabel  jlb_barras = new JLabel();
           jlb_barras.setSize(230, 140);
           jlb_barras.setLocation(0, 0);
            jlb_barras.setIcon(new ImageIcon( getClass().getResource("/Recursos/repro_barras.png")));
           jp_Letras.removeAll();
            jp_Letras.add(jlb_barras);
            jp_Letras.revalidate();
            jp_Letras.repaint();*/
           
           jp_Letras.removeAll();
       if(ventana.espectrometro==null){   
       ventana.espectrometro = new SpectrumTimeAnalyzer();//DISPLAY_MODE_SPECTRUM_ANALYSER
       ventana.espectrometro.setDisplayMode(SpectrumTimeAnalyzer.DISPLAY_MODE_SCOPE);
      
        ventana.espectrometro.setSpectrumAnalyserBandCount(20);
        ventana.espectrometro.setSpectrumAnalyserDecay(0.2f);
        
        int fps = SpectrumTimeAnalyzer.DEFAULT_FPS;
        ventana.espectrometro.setFps(fps);
        ventana.espectrometro.setPeakDelay((int) (fps * SpectrumTimeAnalyzer.DEFAULT_SPECTRUM_ANALYSER_PEAK_DELAY_FPS_RATIO));
        ventana.espectrometro.setSize(248,138);
       //ventana.espectrometro.setVisColor(getViscolor("viscolor.txt"));
       
       }     
          ventana.espectrometro.setBackground(new Color(0,255,120));
          ventana.espectrometro.setOpaque(false);
       ventana.espectrometro.setScopeColor(Color.RED);
            ventana.espectrometro.repaint();
            jp_Letras.add(ventana.espectrometro, BorderLayout.CENTER);
      
            jp_Letras.revalidate();
            
            jp_Letras.repaint();
            
            
            
            if (ventana.audioInfo.containsKey("basicplayer.sourcedataline")) {
                if (ventana.espectrometro != null) {
                    ventana.espectrometro.setupDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));
                    ventana.espectrometro.startDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));

                   ventana.espectrometro.setupDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));
                    ventana.espectrometro.startDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));
                }
            }
        
            
        }

    }//GEN-LAST:event_karaokeActionPerformed
    public String getViscolor(String path) {
        String viscolor = "";
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        try {
            archivo = new File(path);
            if (!archivo.exists()) {
                archivo = new File("viscolor.txt");
            }
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String linea;
            while ((linea = br.readLine()) != null) {
                viscolor += (linea + "\n");
            }
        } catch (Exception e) {
            System.out.println("archivo no leido");
            e.printStackTrace();
        } finally {
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        return viscolor;
    }
    private void jb_retrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_retrocederActionPerformed
        // TODO add your handling code here:
        if(ventana.lista_actual==null){
                    
            ///////////siginifica que trabaja con la lista principal
            if(ventana.repetir_lista!=0){
             System.out.println("actual cancion="+ventana.indice);
             if(ventana.repetir_lista!=1){
            ventana.indice--;
              if(ventana.indice==-1){
                ventana.indice=ventana.lista_completa.size()-1;
                }
             }
             System.out.println("siguiente cancion="+ventana.indice);
             
             ventana.EnRepro=true;//"/Recursos/You're_My_Best_Friend.mp3"
                  
                    
            
           
                      
                     ventana.lista_actual=null;  //se trabaja con la lista completa
                     ventana.mi_reproductor.saltando=true;
                     ventana.mi_reproductor.play(ventana.lista_completa.get(ventana.indice).ruta);
                      if(ventana.repro.isVisible()) ventana.jp_Principal.getComponent(1).setVisible(false);{
                       ventana.jp_Principal.getComponent(1).setVisible(true);
                      ventana.mi_reproductor.saltando=false;
             }
             
            //comprobar el estado
             
            }
        
        }else{
                    
              if(ventana.repetir_lista!=0){
            ///////esta trabajando con una lista mas pequeña
            System.out.println("Lista pequeña="+ventana.indice_actual);
            if(ventana.repetir_lista!=1){
             ventana.indice_actual = (ventana.aleatorio) ? (int) (rnd.nextDouble() * ventana.lista_actual.getSize()):ventana.indice_actual+1;
            if(ventana.indice_actual>=ventana.lista_actual.getSize())ventana.indice_actual=0;
            }
              ventana.mi_reproductor.saltando=true;
            ventana.mi_reproductor.play(buscarRuta(ventana.lista_actual.getElementAt(ventana.indice_actual).toString()));
              ventana.mi_reproductor.saltando=false;
             if(ventana.repro.isVisible()) ventana.jp_Principal.getComponent(1).setVisible(false);{
                       ventana.jp_Principal.getComponent(1).setVisible(true);
        }
            
        }
        }
        
        
    }//GEN-LAST:event_jb_retrocederActionPerformed

    private void STARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STARTActionPerformed
        // TODO add your handling code here:
       
        if(!START.isSelected()){
            try {
                // peppermusic.Barra.suspend();
                peppermusic.mi_reproductor.Pausa();
                
            } catch (Exception ex) {
                Logger.getLogger(jp_Reproduccion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try {
                // if(!peppermusic.Barra.t.isAlive())peppermusic.Barra.start();
                peppermusic.mi_reproductor.Continuar();
          //      peppermusic.mi_reproductor.control.getTitle();
            } catch (Exception ex) {
                Logger.getLogger(jp_Reproduccion.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
      
    }//GEN-LAST:event_STARTActionPerformed

  Random rnd = new Random();
    private void jb_avanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_avanzarActionPerformed
        // TODO add your handling code here:
                if(ventana.lista_actual==null){
                    
            ///////////siginifica que trabaja con la lista principal
            if(ventana.repetir_lista!=0){
             System.out.println("actual cancion="+ventana.indice);
             if(ventana.repetir_lista!=1){
            ventana.indice = (ventana.aleatorio) ? (int) (rnd.nextDouble() * ventana.lista_completa.size()):ventana.indice+1;
              if(ventana.indice==ventana.lista_completa.size()){
                ventana.indice=0;
                }
             }
             System.out.println("siguiente cancion="+ventana.indice);
             
             ventana.EnRepro=true;//"/Recursos/You're_My_Best_Friend.mp3"
                  
                    
            
           
                      
                     ventana.lista_actual=null;  //se trabaja con la lista completa
                     ventana.mi_reproductor.saltando=true;
                     ventana.mi_reproductor.play(ventana.lista_completa.get(ventana.indice).ruta);
                      if(ventana.repro.isVisible()) ventana.jp_Principal.getComponent(1).setVisible(false);{
                       ventana.jp_Principal.getComponent(1).setVisible(true);
                      ventana.mi_reproductor.saltando=false;
             }
             
            //comprobar el estado
             
            }
        
        }else{
                    
              if(ventana.repetir_lista!=0){
            ///////esta trabajando con una lista mas pequeña
            System.out.println("Lista pequeña="+ventana.indice_actual);
            if(ventana.repetir_lista!=1){
             ventana.indice_actual = (ventana.aleatorio) ? (int) (rnd.nextDouble() * ventana.lista_actual.getSize()):ventana.indice_actual+1;
            if(ventana.indice_actual>=ventana.lista_actual.getSize())ventana.indice_actual=0;
            }
              ventana.mi_reproductor.saltando=true;
            ventana.mi_reproductor.play(buscarRuta(ventana.lista_actual.getElementAt(ventana.indice_actual).toString()));
              ventana.mi_reproductor.saltando=false;
             if(ventana.repro.isVisible()) ventana.jp_Principal.getComponent(1).setVisible(false);{
                       ventana.jp_Principal.getComponent(1).setVisible(true);
        }
            
        }
        }
        
        
        
    }//GEN-LAST:event_jb_avanzarActionPerformed
 public String buscarRuta(String busca){
                
        Iterator itListaempleado= ventana.lista_completa.iterator();
        
         
        int h=0;
        while (itListaempleado.hasNext()) {
            ListaDeReproduccion elemento=(ListaDeReproduccion)itListaempleado.next();
            if(elemento.nom_cancion.equals(busca)){
                  ventana.nom_cancion=elemento.nom_cancion;
                
                
               
                return elemento.ruta;
          
            }
            h++;
            //System.out.println(elemento.nom_cancion+" "+elemento.nom_artista+" "+elemento.nom_album);    
        }
        return "NO EXISTE";
 }
    private void jb_muteMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_muteMouseDragged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jb_muteMouseDragged

    private void jb_muteMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_muteMouseMoved
        // TODO add your handling code here:
         try{ Thread.sleep(175); } catch(InterruptedException e ) { System.out.println("Thread Interrupted"); }
         js_volumen.setVisible(true);
        js_volumen.validate();
    }//GEN-LAST:event_jb_muteMouseMoved

    private void jb_muteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_muteMouseExited
        // TODO add your handling code here:
         try{ Thread.sleep(250); } catch(InterruptedException e ) { System.out.println("Thread Interrupted"); }
        js_volumen.setVisible(false);
        js_volumen.validate();
    }//GEN-LAST:event_jb_muteMouseExited

    private void js_volumenMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_js_volumenMouseMoved
        // TODO add your handling code here:
         try{ Thread.sleep(175); } catch(InterruptedException e ) { System.out.println("Thread Interrupted"); }
        js_volumen.setVisible(true);
        js_volumen.validate();
        
    }//GEN-LAST:event_js_volumenMouseMoved

    private void js_volumenMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_js_volumenMouseExited
        // TODO add your handling code here:
         try{ Thread.sleep(250); } catch(InterruptedException e ) { System.out.println("Thread Interrupted"); }
         js_volumen.setVisible(false);
        js_volumen.validate();
        
         

    
    }//GEN-LAST:event_js_volumenMouseExited

    private void js_volumenComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_js_volumenComponentAdded
        // TODO add your handling code here:
       
       
    }//GEN-LAST:event_js_volumenComponentAdded

    private void jb_repetirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_repetirActionPerformed
        // TODO add your handling code here:
        if(repetir==0){
            jb_repetir.setIcon(new ImageIcon( getClass().getResource("/Recursos/repro_rep_1.png")));
            jb_repetir.setToolTipText("REPETIR CANCIÓN");
            repetir++;
               ventana.repetir_lista=repetir;        
            return;
        }
        if(repetir==1){
            jb_repetir.setIcon(new ImageIcon( getClass().getResource("/Recursos/repro_rep_todo.png")));
            jb_repetir.setToolTipText("REPETIR TODAS LAS CANCIÓNES");
            repetir++;
            ventana.repetir_lista=repetir;
            return;
        }
        if(repetir==2){
            jb_repetir.setIcon(new ImageIcon( getClass().getResource("/Recursos/repro_rep_off.png")));
            jb_repetir.setToolTipText("REPETICIÓN DESACTIVADA");
            repetir=0;
            ventana.repetir_lista=repetir;
            
        }
        
        
    }//GEN-LAST:event_jb_repetirActionPerformed

    private void jtb_agrandarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtb_agrandarActionPerformed
        // TODO add your handling code here:
       
        if(jtb_agrandar.isSelected()){
           // jtb_agrandar.setLocation(238,150);
          
            peppermusic.setSize(300, 168);
            Shape forma = new RoundRectangle2D.Double(0,0,peppermusic.getBounds().width,peppermusic.getBounds().height,110,110);
            AWTUtilities.setWindowShape(peppermusic, forma);
              if (ventana.skin == 0){
            
              fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/Fondo_Celeste2.png")));
             
         }
          if (ventana.skin == 1){
             
               fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/clasica3.png")));
          }
           if (ventana.skin == 2){
              
                fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/rock3.png")));
           }
            if (ventana.skin == 3){
                
                fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/urbano3.png")));
            }
         //   jlb_barras.setVisible(false);
            jp_Letras.setVisible(false);
            jp_Letras.setLocation(300, 170);
            jp_Letras.repaint();
            fondo1.setSize(300,168);
            fondo1.repaint();
            super.setEnabled_Lista(false);
            
            fondo1.revalidate();

        }else{

            peppermusic.setSize(300, 336);
            Shape forma = new RoundRectangle2D.Double(0,0,peppermusic.getBounds().width,peppermusic.getBounds().height,125,125);
            AWTUtilities.setWindowShape(peppermusic, forma);
            
              if (ventana.skin == 0){
            
              fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/Fondo_Celeste.png")));
             
         }
          if (ventana.skin == 1){
             
               fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/clasica2.png")));
          }
           if (ventana.skin == 2){
              
                fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/rock2.png")));
           }
            if (ventana.skin == 3){
                
                fondo1.setIcon(new ImageIcon(ventana.getClass().getResource("/Recursos/urbano2.png")));
            }
            
            
            fondo1.setLocation(0, 0);
            fondo1.setSize(300,336);
            fondo1.repaint();
            jp_Letras.setVisible(true);
            jp_Letras.setLocation(30, 160);
            jp_Letras.repaint();
//            jlb_barras.setVisible(true);
            super.setEnabled_Lista(true);
            fondo1.revalidate();
           // jtb_agrandar.setLocation(238,315);
           
        }

    }//GEN-LAST:event_jtb_agrandarActionPerformed
   double valor;
    private void jp_ProgresoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_ProgresoMouseClicked
        // TODO add your handling code here:
         
      int x = evt.getX();
      int y = evt.getY();
     // JOptionPane.showMessageDialog(canc,x + "+"+y+"="+(x + y)); 
       
      if(x==40)return;//reiniciar cancion
         
         valor = Math.toDegrees( Math.atan(((double)y-40)/((double)x-40)));
         double z;
          
         if(x>40)
         { 
             z = Math.floor((valor+90)/3.6);
            
         }else{
             
             z = Math.floor((valor+270)/3.6);
         }
       
         
       //  System.out.println("cambio; "+(ventana.bits_total*z/100));
         
        try {
            peppermusic.mi_reproductor.seeked((long)(ventana.bits_total*z/100));
            // JOptionPane.showMessageDialog(canc,valor);
            //jp_Progreso.ActualizarProgreso(z);
            //     canc.venta.Barra.n=z;
        } catch (BasicPlayerException ex) {
            Logger.getLogger(jp_Reproduccion.class.getName()).log(Level.SEVERE, null, ex);
        }
      
         
    }//GEN-LAST:event_jp_ProgresoMouseClicked
 double ganancia=1;
    
    private void js_volumenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_js_volumenStateChanged
        // TODO add your handling code here:
           try { 
               if(jb_mute.isSelected()) jb_mute.setSelected(false);
               ganancia=(double)js_volumen.getValue()/100;
            peppermusic.mi_reproductor.control.setGain(ganancia); 
        } catch (BasicPlayerException ex) { 
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
        } 
        

    
    }//GEN-LAST:event_js_volumenStateChanged

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formPropertyChange

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // TODO add your handling code here:
        
                   jp_Letras.removeAll();
                   pn.stop();
                   
        
    }//GEN-LAST:event_formComponentHidden
    public void leer_txt(String ruta){
     
     String codigo = new String(), path = ruta;
			File archivo = new File(path);
     if (archivo.exists()){
			FileReader fr = null;
			BufferedReader entrada = null;
			try {
				fr = new FileReader(path);
				entrada = new BufferedReader(fr);

				while(entrada.ready()){
					codigo += entrada.readLine()+"\n";
				}

			}catch(IOException e) {
				e.printStackTrace();
			}finally{
				try{                    
					if(null != fr){   
						fr.close();     
					}                  
				}catch (Exception e2){ 
					e2.printStackTrace();
				}
			}
            
     }else{codigo="\n\n\n No hay letra, Porfavor Ingresela manualmente";}
                      jtxt_letra.setText(codigo);
                      StyledDocument doc = jtxt_letra.getStyledDocument();
                       SimpleAttributeSet center = new SimpleAttributeSet();
                      StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
                       doc.setParagraphAttributes(0, doc.getLength(), center, false);
                      jtxt_letra.revalidate();
                      
                    
                      
 }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        System.out.println("MOSTRAAAAAAAAAAAADO ");
        if(!karaoke.isSelected()){
            js_Letras.setLocation(0, 0);
            js_Letras.setVisible(true);
         /*   if(ventana.jp_Principal.getComponent(2)==ventana.inicio.p1)leer_txt("C:\\PepperMusic_Datos\\Letras\\"+ventana.lista_completa.get(ventana.indice).nom_cancion+".txt");
             if(ventana.jp_Principal.getComponent(2)==ventana.inicio.p2)leer_txt("C:\\PepperMusic_Datos\\Letras\\"+ventana.Lista_album.get(ventana.indice_album).items_album().get(ventana.indice_cancion).nom_cancion+".txt");
            if(ventana.jp_Principal.getComponent(2)==ventana.inicio.p3)leer_txt("C:\\PepperMusic_Datos\\Letras\\"+ventana.Lista_artista.get(ventana.indice_album).items_artista().get(ventana.indice_cancion).nom_cancion+".txt");
             if(ventana.jp_Principal.getComponent(2)==ventana.inicio.p4)leer_txt("C:\\PepperMusic_Datos\\Letras\\"+ventana.Lista_genero.get(ventana.indice_album).items_genero().get(ventana.indice_cancion).nom_cancion+".txt");
             */jp_Letras.removeAll();
             System.out.println("RUTA="+ventana.ruta_txt);
           // leer_txt(ventana.ruta_txt);
           leer_txt("C:\\PepperMusic_Datos\\Letras\\"+ventana.nom_cancion+".txt");
            jp_Letras.add(js_Letras);
           //jp_Letras.revalidate();
           //jp_Letras.repaint();
           
/*            jlb_artista.setText(ventana.nom_artista);
           jlb_cancion.setText(ventana.nom_cancion);
            jlb_album.setText(ventana.nom_album);*/
            
             
             Clase_Progreso cal =new  Clase_Progreso(ventana);
             cal.start();
            // js_Letras.getVerticalScrollBar().setValue(0); 
            /*
           jlb_barras.setIcon(new ImageIcon( getClass().getResource("/Recursos/imagen_letras.png")));
            jlb_barras.repaint();
            jlb_barras.revalidate();
*/
        }else{
            
           /*JLabel  jlb_barras = new JLabel();
           jlb_barras.setSize(230, 140);
           jlb_barras.setLocation(0, 0);
            jlb_barras.setIcon(new ImageIcon( getClass().getResource("/Recursos/repro_barras.png")));
           jp_Letras.removeAll();
            jp_Letras.add(jlb_barras);
            jp_Letras.revalidate();
            jp_Letras.repaint();*/
           
           jp_Letras.removeAll();
       if(ventana.espectrometro==null){   
       ventana.espectrometro = new SpectrumTimeAnalyzer();//DISPLAY_MODE_SPECTRUM_ANALYSER
       ventana.espectrometro.setDisplayMode(SpectrumTimeAnalyzer.DISPLAY_MODE_SCOPE);
      
        ventana.espectrometro.setSpectrumAnalyserBandCount(20);
        ventana.espectrometro.setSpectrumAnalyserDecay(0.2f);
        
        int fps = SpectrumTimeAnalyzer.DEFAULT_FPS;
        ventana.espectrometro.setFps(fps);
        ventana.espectrometro.setPeakDelay((int) (fps * SpectrumTimeAnalyzer.DEFAULT_SPECTRUM_ANALYSER_PEAK_DELAY_FPS_RATIO));
       
       //ventana.espectrometro.setVisColor(getViscolor("viscolor.txt"));
       
       }     
          ventana.espectrometro.setBackground(new Color(0,255,120));
          ventana.espectrometro.setOpaque(false);
       ventana.espectrometro.setScopeColor(Color.RED);
            ventana.espectrometro.repaint();
            jp_Letras.add(ventana.espectrometro, BorderLayout.CENTER);
      
            jp_Letras.revalidate();
            
            jp_Letras.repaint();
            
            
            
            if (ventana.audioInfo.containsKey("basicplayer.sourcedataline")) {
                if (ventana.espectrometro != null) {
                    ventana.espectrometro.setupDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));
                    ventana.espectrometro.startDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));

                   ventana.espectrometro.setupDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));
                    ventana.espectrometro.startDSP((SourceDataLine) ventana.audioInfo.get("basicplayer.sourcedataline"));
                }
            }
        
             
        }
        
        
             pn.removeAll();
             pn.NuevaLetra(new JLabel(ventana.nom_artista,SwingConstants.CENTER),new JLabel(ventana.nom_cancion,SwingConstants.CENTER), new JLabel(ventana.nom_album,SwingConstants.CENTER));
             pn.revalidate();
             pn.repaint();
      /*  jlb_cancion.setText(ventana.nom_cancion);
        jlb_artista.setText(ventana.nom_artista);
        jlb_album.setText(ventana.nom_album);*/
       

        
    }//GEN-LAST:event_formComponentShown

    private void jb_add_letrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_add_letrasActionPerformed
        // TODO add your handling code here:
        Add_letra add= new Add_letra(ventana);
        add.setVisible(true);
        add.setAlwaysOnTop(true);
          
        
    }//GEN-LAST:event_jb_add_letrasActionPerformed

    private void js_LetrasComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_js_LetrasComponentShown
        // TODO add your handling code here:
       
    }//GEN-LAST:event_js_LetrasComponentShown

    private void jtxt_letraComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jtxt_letraComponentShown
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jtxt_letraComponentShown

    private void jp_LetrasComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jp_LetrasComponentShown
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jp_LetrasComponentShown

    private void jb_EcualizadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_EcualizadorActionPerformed
        // TODO add your handling code here:
        try {
            VistaEcualizador ecu = new VistaEcualizador(peppermusic);
            ControlEcualizador control = new ControlEcualizador(ecu);
            ecu.setState(control.getState());
            ecu.setControl(control);
            ecu.setLocationRelativeTo(null);
            ecu.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ventana, "Error al abrir ecualizador. Contactar al desarrollador 0996408107"+e.getMessage());
        }
        
    }//GEN-LAST:event_jb_EcualizadorActionPerformed

    private void jp_ProgresoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_ProgresoMouseExited
        // TODO add your handling code here:
       
         
    }//GEN-LAST:event_jp_ProgresoMouseExited

    private void jp_ProgresoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_ProgresoMouseMoved
        // TODO add your handling code here:
          int x = evt.getX();
      int y = evt.getY();
     // JOptionPane.showMessageDialog(canc,x + "+"+y+"="+(x + y)); 
       
      if(x==40)return;//reiniciar cancion
         
         valor = (double)Math.toDegrees( Math.atan(((double)y-40)/((double)x-40)));
         double z;
          
         if(x>40)
         { 
             z = (double)(valor+90)/3.6;
            
         }else{
             
             z =(double)(valor+270)/3.6;
         }
       
         
        
         double tiempo = ((double)(ventana.duracion/1000000));
         double minuto =(tiempo*z/6000);
         int segundos = (int)Math.floor(((double)(minuto-(int)minuto)*60));
         jp_Progreso.setToolTipText(""+((minuto<10)?"0":"")+(int)minuto+":"+((segundos<10)?"0":"")+segundos);
    }//GEN-LAST:event_jp_ProgresoMouseMoved

    private void jtxt_letraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxt_letraMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jtxt_letraMouseClicked

    private void jtb_aleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtb_aleatorioActionPerformed
        // TODO add your handling code here:
        if(jtb_aleatorio.isSelected()) ventana.aleatorio=true;
        else ventana.aleatorio=false;
                
    }//GEN-LAST:event_jtb_aleatorioActionPerformed

    private void jb_reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_reiniciarActionPerformed
        try {
            // TODO add your handling code here:
            ventana.mi_reproductor.seeked(0);
            
            ventana.repro.START.setSelected(false);
            ventana.mi_reproductor.Pausa();
        } catch (Exception ex) {
            Logger.getLogger(jp_Reproduccion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_reiniciarActionPerformed

    private void jb_muteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_muteActionPerformed
        // TODO add your handling code here:
        if(jb_mute.isSelected()){
          try { 
               
            peppermusic.mi_reproductor.control.setGain(0); 
          } catch (BasicPlayerException ex) { 
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
          } 
        }else{
              try { 
               
            peppermusic.mi_reproductor.control.setGain(ganancia); 
        } catch (BasicPlayerException ex) { 
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
        } 
        }
    }//GEN-LAST:event_jb_muteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public peppermusic.CustomButton START;
    private javax.swing.JLabel fondo1;
    private javax.swing.JButton jb_Ecualizador;
    private javax.swing.JButton jb_add_letras;
    private javax.swing.JButton jb_avanzar;
    private peppermusic.CustomButton jb_mute;
    private javax.swing.JButton jb_reiniciar;
    private javax.swing.JButton jb_repetir;
    private javax.swing.JButton jb_retroceder;
    public javax.swing.JLabel jlb_tiempo;
    private javax.swing.JPanel jp_Letras;
    public peppermusic.CustomPanel jp_Progreso;
    public javax.swing.JScrollPane js_Letras;
    private javax.swing.JSlider js_volumen;
    private javax.swing.JToggleButton jtb_agrandar;
    private peppermusic.CustomButton jtb_aleatorio;
    private javax.swing.JTextPane jtxt_letra;
    private javax.swing.JToggleButton karaoke;
    public peppermusic.LetraAnimada.PanelAnimado pn;
    // End of variables declaration//GEN-END:variables
}
